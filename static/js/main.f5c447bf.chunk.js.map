{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAIaA,G,MAAO,SAAAC,GAAK,OACtB,yBAAKC,UAAU,kBACZ,yBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,gCAAOL,EAAMG,QAAQG,KAArB,KACA,+BAAMN,EAAMG,QAAQI,MAApB,QCFOC,G,MAAW,SAAAR,GAAK,OAC1B,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAK,kBAAC,EAAD,CAAMQ,IAAMR,EAAQC,GAAKD,QAASA,UCJ5DS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACtB,2BACAb,UAAU,SACVc,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCiCCG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,gEASO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,+BAGnC,IAAD,SAC4BE,KAAKR,MAA/BT,EADF,EACEA,SAAUU,EADZ,EACYA,YACbQ,EAAmBlB,EAASmB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQG,KAAKuB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,yBAAK5B,UAAU,OACb,kDACA,kBAAC,EAAD,CACAY,YAAY,iBACZC,aAAe,SAAAiB,GAAC,OAAK,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE3D,kBAAC,EAAD,CAAUxB,SAAUkB,S,GA7BVO,cCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f5c447bf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n   <div className='card-container'>\r\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n      <h2> { props.monster.name } </h2>\r\n      <p> { props.monster.email } </p>\r\n   </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n   <div className='card-list'>\r\n      { props.monsters.map(monster => (<Card key={ monster.id } monster={monster}/>\r\n      ))}\r\n   </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n   <input \r\n   className='search'\r\n   type='search' \r\n   placeholder={ placeholder } \r\n   onChange={ handleChange }\r\n   />\r\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const  { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className='App'>\n        <h1> Monsters Rolodex </h1>\n        <SearchBox\n        placeholder='search monster' \n        handleChange={ e =>  this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}